@model Solve

 @{
 ViewBag.Title = "Promise";
 }

<h2>Promise</h2>


@using (Html.BeginForm()) 
{
@Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Solve</h4>
    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.a, htmlAttributes: new { @class = 
 "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.a, new { htmlAttributes = new { 
 @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.a, "", new { @class = 
"text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.b, htmlAttributes: new { @class = 
"control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.b, new { htmlAttributes = new { 
@class = "form-control" } })
            @Html.ValidationMessageFor(model => model.b, "", new { @class = 
"text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.c, htmlAttributes: new { @class = 
"control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.c, new { htmlAttributes = new { 
 @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.c, "", new { @class = 
"text-danger" })
        </div>
    </div>

    <p>@Model.x1 : </p> <p>@Model.x2</p>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Solve" class="btn btn-default" />
        </div>
    </div>
  </div>
}





